version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: wiki-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - mynetwork

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: abc
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo-data:/data/db
    networks:
      - mynetwork

  mongo-express:
    image: mongo-express:latest
    restart: always
    environment:
      ME_CONFIG_MONGODB_AUTH_USERNAME: abc
      ME_CONFIG_MONGODB_AUTH_PASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: abc
      ME_CONFIG_BASICAUTH_PASSWORD: pass
      ME_CONFIG_SITE_BASEURL: /mongo-express
    depends_on:
      - mongo
    networks:
      - mynetwork

  bot:
    container_name: bot
    image: nurzhankhn/wiki-discord-bot:latest
    environment:
      KAFKA_BROKER: 'PLAINTEXT://kafka:29092'
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      ALERT_TELEGRAM_BOT_TOKEN: ${ALERT_TELEGRAM_BOT_TOKEN}
    depends_on:
      mongo:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started

  nginx:
    image: nurzhankhn/wiki-nginx:latest
    ports:
      - "80:80"
    depends_on:
      - mongo-express
      - kafka-ui
    networks:
      - mynetwork

volumes:
  mongo-data:
    driver: local

networks:
  mynetwork:
    driver: bridge